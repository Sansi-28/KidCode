name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'

    - name: Extract version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        else
          echo "version=snapshot" >> $GITHUB_OUTPUT
        fi

    - name: Build release
      run: |
        mvn clean package -DskipTests -B
        mvn install -DskipTests -B

    - name: Create distribution archives
      run: |
        mkdir -p release
        cd kidcode-desktop/target
        if [ -f kidcode-desktop-*.jar ]; then
          cp kidcode-desktop-*.jar ../../release/
        fi
        cd ../../kidcode-web/target
        if [ -f kidcode-web-*.jar ]; then
          cp kidcode-web-*.jar ../../release/
        fi
        cd ../../

    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kidcode-release-${{ steps.get_version.outputs.version }}
        path: release/

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract version
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build Docker image
      if: hashFiles('Dockerfile') != ''
      run: |
        docker build -t kidcode:${{ steps.get_version.outputs.version }} .
        docker tag kidcode:${{ steps.get_version.outputs.version }} kidcode:latest

    - name: Save Docker image
      if: hashFiles('Dockerfile') != ''
      run: |
        docker save kidcode:${{ steps.get_version.outputs.version }} | gzip > kidcode-docker-${{ steps.get_version.outputs.version }}.tar.gz

    - name: Upload Docker image artifact
      if: hashFiles('Dockerfile') != ''
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: kidcode-docker-*.tar.gz
