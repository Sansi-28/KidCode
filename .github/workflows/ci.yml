name: CI Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 17, 21 ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install -B -V

    - name: Run tests
      run: mvn test -B

    - name: Generate test report
      if: always()
      run: mvn surefire-report:report

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/site/

    - name: Check code style
      run: mvn checkstyle:check || true
      continue-on-error: true

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'

    - name: Compile project
      run: mvn clean compile -B

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if Dockerfile exists
      id: check_dockerfile
      run: |
        if [ -f "Dockerfile" ]; then
          echo "dockerfile_exists=true" >> $GITHUB_OUTPUT
        else
          echo "dockerfile_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Build Docker image
      if: steps.check_dockerfile.outputs.dockerfile_exists == 'true'
      run: docker build -t kidcode:test .

    - name: Test Docker image
      if: steps.check_dockerfile.outputs.dockerfile_exists == 'true'
      run: docker images | grep kidcode
