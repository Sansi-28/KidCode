name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'

    - name: Build and Test
      run: |
        mvn clean install -B
        mvn test -B

    - name: Check for merge conflicts
      run: |
        git fetch origin ${{ github.base_ref }}
        if git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} | grep -q '<<<<<<<'; then
          echo "::error::Merge conflicts detected"
          exit 1
        fi

    - name: Comment test results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const testResults = 'Build and test completed';
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Test Results\n\nâœ… ${testResults}`
          });

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'maven'

    - name: Run tests with coverage
      run: mvn test jacoco:report || true
      continue-on-error: true

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: '**/target/site/jacoco/'

  label-pr:
    name: Auto Label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Label based on files changed
      uses: actions/labeler@v5
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
